/*
 * Pets API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PetsList List of pets in database
type PetsList struct {
	// List of pets
	Pets []Pet `json:"pets"`
}

// NewPetsList instantiates a new PetsList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPetsList(pets []Pet) *PetsList {
	this := PetsList{}
	this.Pets = pets
	return &this
}

// NewPetsListWithDefaults instantiates a new PetsList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPetsListWithDefaults() *PetsList {
	this := PetsList{}
	return &this
}

// GetPets returns the Pets field value
func (o *PetsList) GetPets() []Pet {
	if o == nil {
		var ret []Pet
		return ret
	}

	return o.Pets
}

// GetPetsOk returns a tuple with the Pets field value
// and a boolean to check if the value has been set.
func (o *PetsList) GetPetsOk() (*[]Pet, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Pets, true
}

// SetPets sets field value
func (o *PetsList) SetPets(v []Pet) {
	o.Pets = v
}

func (o PetsList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["pets"] = o.Pets
	}
	return json.Marshal(toSerialize)
}

type NullablePetsList struct {
	value *PetsList
	isSet bool
}

func (v NullablePetsList) Get() *PetsList {
	return v.value
}

func (v *NullablePetsList) Set(val *PetsList) {
	v.value = val
	v.isSet = true
}

func (v NullablePetsList) IsSet() bool {
	return v.isSet
}

func (v *NullablePetsList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePetsList(val *PetsList) *NullablePetsList {
	return &NullablePetsList{value: val, isSet: true}
}

func (v NullablePetsList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePetsList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


